<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<Nullable>enable</Nullable>
		<LangVersion>latest</LangVersion>
		<TargetFramework>netstandard2.0</TargetFramework>
		<GeneratePackageOnBuild>false</GeneratePackageOnBuild>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
	</PropertyGroup>

	<ItemGroup>
	  <Compile Remove="Extensions\**" />
	  <Compile Remove="SourceGenerator\**" />
	  <EmbeddedResource Remove="Extensions\**" />
	  <EmbeddedResource Remove="SourceGenerator\**" />
	  <None Remove="Extensions\**" />
	  <None Remove="SourceGenerator\**" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Include="Extensions\CompilationExtensions.cs" />
	  <Compile Include="Extensions\ISymbolExtensions.cs" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.9.2" PrivateAssets="all" />
		<PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" /> 
		<PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="8.0.0" />
		<PackageReference Include="Microsoft.Extensions.Options.DataAnnotations" Version="8.0.0" />
	</ItemGroup>
 
	<PropertyGroup>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<!-- Generates a package at build -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<!-- Do not include the generator as a lib dependency -->
		<EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
	</PropertyGroup>
	
	<ItemGroup>
		<None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
	</ItemGroup>
	
	<Target Name="SetDefaultOutputItemTypeForAnalyzers" BeforeTargets="ResolveReferences">
		<ItemGroup>
			<ReferencePath Condition="'%(FileName)' == 'DependencyInjection'">
				<OutputItemType>Analyzer</OutputItemType>
			</ReferencePath>
		</ItemGroup>
	</Target>
</Project>
